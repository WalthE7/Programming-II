#include <iostream>
#include <string>
using namespace std;

template <typename T>
int binarySearch(const T list[], int size, T key) {
    int low = 0;
    int high = size - 1;

    while (high >= low) {
        int mid = (low + high) / 2;
        if (key < list[mid])
            high = mid - 1;
        else if (key == list[mid])
            return mid;
        else
            low = mid + 1;
    }
    return -1; // key not found
}

int main() {
    int intArray[] = {1, 3, 5, 7, 9, 11};
    int intSize = sizeof(intArray) / sizeof(intArray[0]);
    int intKey = 7;
    cout << "Index of " << intKey << " in intArray: " << binarySearch(intArray, intSize, intKey) << endl;

    double doubleArray[] = {1.1, 2.2, 3.3, 4.4, 5.5};
    int doubleSize = sizeof(doubleArray) / sizeof(doubleArray[0]);
    double doubleKey = 4.4;
    cout << "Index of " << doubleKey << " in doubleArray: " << binarySearch(doubleArray, doubleSize, doubleKey) << endl;

    string stringArray[] = {"apple", "banana", "cherry", "date", "fig"};
    int stringSize = sizeof(stringArray) / sizeof(stringArray[0]);
    string stringKey = "cherry";
    cout << "Index of \"" << stringKey << "\" in stringArray: " << binarySearch(stringArray, stringSize, stringKey) << endl;

    return 0;
}
